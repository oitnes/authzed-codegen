name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.24"

      - name: Download dependencies
        run: go mod download

      - name: Verify dependencies
        run: go mod verify

      - name: Build
        run: go build -v ./...

      - name: Run unit tests
        run: go test -v -race -coverprofile=coverage.out ./...

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.out
          flags: unittests
          name: codecov-umbrella

  examples:
    name: Test Examples
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.24"

      - name: Build application
        run: go build -o authzed-codegen ./cmd/authzed-codegen

      - name: Test example_1.zed
        run: |
          ./authzed-codegen --schema examples/example_1.zed --output test_output_1/
          echo "Generated files for example_1.zed:"
          find test_output_1/ -name "*.go" -type f

      - name: Test example_2.zed
        run: |
          ./authzed-codegen --schema examples/example_2.zed --output test_output_2/
          echo "Generated files for example_2.zed:"
          find test_output_2/ -name "*.go" -type f

      - name: Verify generated code compiles
        run: |
          echo "Checking if generated code compiles..."
          cd test_output_1 && go mod init test1 && go mod tidy
          cd ../test_output_2 && go mod init test2 && go mod tidy
          echo "Generated code compilation check passed"
